{"version":3,"file":"app.bundle.js","mappings":";;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;AC7IA,YAAY,iCAA2B;;AAEvC;AACA;AACA,uFAAuF,IAAI,KAAK,KAAK,IAAI,aAAa;AACtH;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;;;;ACfqB;AACmF;AAC7D;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA,sCAAsC,cAAc;;AAEpD;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;;AAEA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,a","sources":["webpack://weather-app-top/./src/dom.js","webpack://weather-app-top/./src/weather.js","webpack://weather-app-top/./src/index.js"],"sourcesContent":["const createSearchBar = () => {\n\n    const input = document.createElement('input');\n    input.type = 'search'\n    input.placeholder = \"Search City\";\n    input.name = 'search';\n    input.id = 'searchCity';\n\n    const button = document.createElement('button');\n    button.className = \"submit\";\n    button.id = \"submit\";\n    button.textContent = \"Search\";\n    button.setAttribute(\"type\", \"submit\");\n\n    const form = document.createElement('form');\n    form.addEventListener('submit', (event) => event.preventDefault());\n    form.append(input,button);\n\n    return form;\n}\n\nconst createCityName = (location) => {\n\n    const name = document.createElement('p');\n    name.className = 'name';\n    name.textContent = location.name + ', ' + location.region + ', ' + location.country;\n\n    const container = document.createElement('container');\n    container.className = 'city';\n    container.append(name);\n\n    return container;\n}\n\nconst createCurrWeatherCondition = (weatherData) => {\n\n    const temp = document.createElement('p');\n    temp.textContent = weatherData.temp_c + '°C';\n    temp.className = 'current_temperature';\n    \n    const weather = document.createElement('p');\n    weather.textContent = weatherData.condition.text;\n    weather.className = 'weather_condition';\n\n    const icon = document.createElement('img');\n    icon.className = 'weather_icon';\n    icon.alt = weatherData.condition.text;\n    icon.src = weatherData.condition.icon;\n\n    const container = document.createElement('container');\n    container.className = 'weather';\n    container.append(temp,icon,weather);\n\n    return container;\n}\n\nconst createDetails = (title,data) => {\n\n    const label = document.createElement('p');\n    label.textContent = title;\n    label.className = title.toLowerCase().replaceAll(' ', '');\n\n    const dataSpan = document.createElement('span');\n    dataSpan.textContent = data;\n    label.append(dataSpan);\n\n    return label;\n}\n\nconst createWindCondition = (weatherData) => {\n    \n    const title = document.createElement('p');\n    title.textContent = 'Wind';\n    title.className = 'title';\n\n    const direction = createDetails('Direction', weatherData.wind_dir);\n\n    const speed = createDetails('Speed', weatherData.wind_kph + ' km/h')\n\n    const container = document.createElement('container');\n    container.className = 'wind';\n    container.append(title, direction, speed);\n\n    return container;\n}\n\nconst createOtherData = (weather) => {\n\n    const humidity = createDetails('Humidity', weather.humidity + '%');\n    const realFeel = createDetails('Real Feel', weather.feelslike_c + '°C');\n    const uv = createDetails('UV', weather.uv);\n    const pressure = createDetails('Pressure', weather.pressure_mb + 'mbar');\n\n    const container = document.createElement('container');\n    container.className = 'other';\n    container.append(humidity, realFeel, uv, pressure);\n\n    return container;\n}\n\nconst createCityWeatherDetails = (currentData) => {\n\n    const locationData = currentData.location;\n    const currentWeatherData = currentData.current;\n    \n    const cityName = createCityName(locationData);\n    const weatherCondition = createCurrWeatherCondition(currentWeatherData);\n    const windCondition = createWindCondition(currentWeatherData);\n    const otherDatas = createOtherData(currentWeatherData);\n\n    const container = document.createElement('container');\n    container.className = 'details';\n    container.append(cityName,weatherCondition, windCondition, otherDatas);\n\n    return container;\n}\n\nconst createErrorPanel = (error) => {\n\n    const message = document.createElement('p');\n    message.id = 'errorMessage';\n    message.textContent = error;\n\n    const container = document.createElement('container');\n    container.className = 'details';\n    container.append(message);\n\n    return container;\n}\n\nconst createLoadingPanel = () => {\n\n    const message = document.createElement('p');\n    message.id = 'loading';\n    message.textContent = 'Loading...';\n\n    const container = document.createElement('container');\n    container.className = 'details';\n    container.append(message);\n\n    return container;\n}\n\nexport {createSearchBar, createCityWeatherDetails, createErrorPanel, createLoadingPanel};","const key = process.env.WEATHER_API_KEY;\n\nconst getWeatherData = async (city) => {\n    try {\n        const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=${key}&q=${city}`, {mode: 'cors'});\n        const data = await response.json();\n\n        if(data.hasOwnProperty('error')){\n            throw new Error(data.error.message);\n        }else{\n            return data;\n        }\n    } catch (error) {\n        throw new Error('Failed to fetch weather data: ' + error.message);\n    }\n}\n\nexport {getWeatherData};","import './style.css';\nimport { createErrorPanel, createCityWeatherDetails, createSearchBar, createLoadingPanel } from './dom';\nimport { getWeatherData } from './weather';\n\nconst WeatherApp = async () => {\n    try {\n        const body = document.querySelector('body');\n        const main = document.createElement(\"container\");\n        main.className = \"main\";\n        \n        body.append(main);\n\n        const search = createSearchBar();\n        search.addEventListener('submit', async () => {\n            try {\n                if(main.childNodes[1]){\n                    main.removeChild(main.childNodes[1]);\n                }\n                main.append(createLoadingPanel());\n                const city = document.querySelector('#searchCity').value;\n                const weather = await getWeatherData(city);\n\n                if(main.childNodes[1]){\n                    main.removeChild(main.childNodes[1]);\n                }\n                main.append(createCityWeatherDetails(weather));\n    \n            } catch(error){\n                if(main.childNodes[1]){\n                    main.removeChild(main.childNodes[1]);\n                }\n\n                let message = error.message;\n                \n                if(message === 'Failed to fetch weather data: Parameter q is missing.'){\n                    message = 'Failed to fetch weather data: Search bar is empty';\n                }\n                main.append(createErrorPanel(message));\n            }\n\n        });\n        \n        main.append(search);        \n        \n    } catch (error) {\n        console.error(error);\n    }\n}\n\nWeatherApp();"],"names":[],"sourceRoot":""}